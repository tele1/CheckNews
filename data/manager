#!/bin/bash


export PATH_RELATIV=$(dirname "$0")


function Func_remove() {
	# if variable is empty
	if [ -z "$TREE1" ]
	then
		notify-send "Nothing selected to remove."
		echo "Nothing selected from links to remove." | tee -a ${PATH_RELATIV}/logs/fu.log
	else
		number1=$(awk '{print $1}' <<< "$TREE1")
		rm -vf ${PATH_RELATIV}/markers/${number1}.*
		echo -e "$(cat ${PATH_RELATIV}/manager.scr/lists | grep -v ^"$TREE1")" > ${PATH_RELATIV}/manager.scr/lists
		rm -vf ${PATH_RELATIV}/manager.scr/filters/${number1}.filter
	fi
} ; export -f Func_remove


function Edit_filter() {
	# if variable is empty
	if [ -z "$TREE1" ]
	then
		echo "variable is empty"
		notify-send "Nothing selected to remove."
	else
		number1=$(awk '{print $1}' <<< "$TREE1")
		xdg-open ${PATH_RELATIV}/manager.scr/filters/${number1}.filter
	fi
} ; export -f Edit_filter


function Refresh_markers() {
# Clean all marks
rm -vf ${PATH_RELATIV}/manager.scr/markers/*
# Create new markers

NUMBER_OF_LINES1=$(cat ${PATH_RELATIV}/manager.scr/lists | wc -l)
for i in `seq 1 $NUMBER_OF_LINES1` ; do

	LINE_1=$(awk 'NR=='$i ${PATH_RELATIV}/manager.scr/lists)
	NUMBER_2=$(awk '{ print $1 }' <<< $LINE_1 )
	LINK_2=$(awk '{ print $2 }' <<< $LINE_1 )
	
	if [ -s ${PATH_RELATIV}/manager.scr/filters/${NUMBER_2}.filter ]; then
		bash ${PATH_RELATIV}/manager.scr/filters/${NUMBER_2}.filter  ${LINK_2} > ${PATH_RELATIV}/manager.scr/markers/${NUMBER_2}.0.marker
	else
		curl -s  "$LINK_2" > ${PATH_RELATIV}/manager.scr/markers/${NUMBER_2}.0.marker
	fi

done
} ; export -f Refresh_markers


function Func_refresh_cron() {
echo ${PATH_RELATIV}
PATH_PWD=$(pwd)
DIS="DISPLAY=$DISPLAY"

if [ "$CHECKBOX" = "true" ]; then
	# remove from cron
	crontab -l | grep -v 'data/check_news'  | crontab -
	# add to cron
	if [ "$SPIN_HOUR" -eq "0" ]; then
		(crontab -l ; echo "*/${SPIN_MIN} * * * * ${DIS} /bin/bash ${PATH_PWD}/data/check_news") | crontab  -
		if [ "$SPIN_MIN" -eq "0" ]; then
			${PATH_RELATIV}/window1.info "Cron with 0 hour and 0 min will off."
		fi
	elif [ "$SPIN_MIN" -eq "0" ]; then
		(crontab -l ; echo "0 */${SPIN_HOUR} * * * ${DIS} /bin/bash ${PATH_PWD}/data/check_news") | crontab  -
	else
		(crontab -l ; echo "*/${SPIN_MIN} */${SPIN_HOUR} * * * ${DIS} /bin/bash ${PATH_PWD}/data/check_news") | crontab  -
		${PATH_RELATIV}/window1.info "Info: The script will run every ${SPIN_MIN} min. Please use only hour or minute."
	fi
else
	# remove from cron
	crontab -l | grep -v 'data/check_news'  | crontab -
fi
} ; export -f Func_refresh_cron


function Refresh_checkbox() {
	if crontab -l | grep -q 'data/check_news' ; then
		echo '<default>true</default>'
	else
		echo '<default>false</default>'
	fi
} ; export -f Refresh_checkbox


function Refresh_Hour() {
	if crontab -l | grep -q 'data/check_news' ; then
		DEF_HOUR=$(crontab -l | grep 'data/check_news'| awk '{print $2}' | sed -e 's/*\///g')
		echo '<default>'$DEF_HOUR'</default>'
	else
		echo '<default>0</default>'
		echo '<sensitive>false</sensitive>'
	fi
} ; export -f Refresh_Hour


function Refresh_Min() {
	if crontab -l | grep -q 'data/check_news' ; then
		DEF_MIN=$(crontab -l | grep 'data/check_news'| awk '{print $1}' | sed -e 's/*\///g')
		echo '<default>'$DEF_MIN'</default>'
	else
		echo '<default>10</default>'
		echo '<sensitive>false</sensitive>'
	fi
} ; export -f Refresh_Min


funcList() {
while IFS= read -r line3 ; do

 awk '{print "|" $1 "|" $3" "$4 "|" $2}' <<< $line3
#
done < "${PATH_RELATIV}/manager.scr/lists"
}; export -f funcList


Def_CHECKBOX2_sensitive() {
	if crontab -l | grep -q 'data/check_news' ; then
		echo '<sensitive>true</sensitive>'
	else
		echo '<sensitive>false</sensitive>'
	fi
}; export -f Def_CHECKBOX2_sensitive


function Refresh_CHECKBOX2() {
	if grep -q "disable_automatic_start=enable" "${PATH_RELATIV}/manager.scr/settings" ; then
		echo '<default>true</default>'
	else
		echo '<default>false</default>'
	fi
}; export -f Refresh_CHECKBOX2


function Func_run_manager() {
GTKDIALOG=gtkdialog

export manage='
<window  title="Manager">
<vbox scrollable="true" width-request="600" width="700" height="400">

<hbox space-expand="true">
	<checkbox>
		<label>Enable checking news every</label>
		'"`Refresh_checkbox`"'
		<variable>CHECKBOX</variable>
		<action>echo Checkbox is $CHECKBOX now.</action>
		<action>if false disable:CHECKBOX2</action>
		<action>if true enable:CHECKBOX2</action>
		<action>if false disable:SPIN_HOUR</action>
		<action>if true enable:SPIN_HOUR</action>
		<action>if false disable:SPIN_MIN</action>
		<action>if true enable:SPIN_MIN</action>
	</checkbox>

		<text>
			<label>Hour</label>
		</text>
		<spinbutton range-min="0" range-max="24" range-step="1" range-value="0">
			<variable>SPIN_HOUR</variable>
			'"`Refresh_Hour`"' 
		</spinbutton>

		<text>
			<label>Minutes</label>
		</text>
		<spinbutton range-min="0" range-max="60" range-step="1" range-value="1">
			<variable>SPIN_MIN</variable>
			'"`Refresh_Min`"'
		</spinbutton>
</hbox>


<hbox homogeneous="true">
	<checkbox>
		<label>Disable checking news when app in tray not working.</label>
		<variable>CHECKBOX2</variable>
		<action>echo Checkbox2 is $CHECKBOX2 now.</action>
		<action>if false echo "disable_automatic_start=disable" > '"${PATH_RELATIV}"'/manager.scr/settings</action>
		<action>if true echo "disable_automatic_start=enable" > '"${PATH_RELATIV}"'/manager.scr/settings</action>
			'"`Def_CHECKBOX2_sensitive`"'
			'"`Refresh_CHECKBOX2`"'
	</checkbox>
</hbox>



	<text>
		<label>Links:</label>
	</text>

		<tree>
			<label>ID|Description|Link</label>
			<variable>TREE1</variable>
			<height>150</height>
			<width>400</width>
			<input icon-column="0">bash -c funcList</input>
		</tree>

	<vbox>
	<hbox>
	<vbox>
			<button>
				<label>Edit Filter Selected Link</label>
				<input file icon="gtk-edit"></input>
				<action>Edit_filter</action>

			</button>
	</vbox>
	<vbox>
			<button>
				<label>Add Link</label>
				<input file icon="gtk-add"></input>
				<action>'"${PATH_RELATIV}"'/manager.scr/add_link</action>
				<action>clear:TREE1</action>
				 <action>refresh:TREE1</action>
			</button>
			<button>
				<label>Remove Selected Link</label>
				<input file stock="gtk-remove"></input>
				<action>Func_remove</action>
				<action>clear:TREE1</action>
				<action>refresh:TREE1</action>
			</button>

	</vbox>
	</hbox>
<vseparator height-request="10"></vseparator>

	<hbox>
				<button>
					<label>'$"Exit"'</label>
					<input file icon="gtk-quit"></input>
					<action>echo You pressed exit button</action>
					<action>Func_refresh_cron</action>
					<action type="exit">"Exit by button"</action>
					<variable>managewindow</variable>
					<action type="closewindow">"managewindow"</action>
				</button>
	</hbox>
	</vbox>

</vbox>
</window>
'
gtkdialog -c  --program manage
}


#============{
case $1 in
	"--refresh_markers")
	Refresh_markers
	echo "Markers refreshed."
;;
*)
	## unknown option
	Func_run_manager
;;
esac
#============}
